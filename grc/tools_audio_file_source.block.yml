id: tools_audio_file_source
label: Audio File Source
category: '[Tools]'
flags: [ python, cpp ]

templates:
  imports: import tools
  make: tools.audio_file_source(${file_name}, ${samp_rate_out}, ${channels}, ${repeat}, ${normalize})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: file_name
  label: File Name
  dtype: string
- id: samp_rate_out
  label: Output Sample Rate
  dtype: float
  default: '44100'
- id: channels
  label: Output Channels
  dtype: int
  default: '1'
  hide: part
- id: repeat
  label: Repeat
  dtype: enum
  default: 'True'
  options: ['False', 'True']
  option_labels: ['False', 'True']
- id: normalize
  label: Normalize
  dtype: enum
  default: 'True'
  options: ['False', 'True']
  option_labels: ['False', 'True']

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
#inputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
- label: out
  domain: stream
  dtype: float
  multiplicity: ${ channels }
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
